name: goreleaser

on:
  push:
    tags:
    - 'v*'

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  REPO: kubestellar/galaxy
  CHARTS_PATH: ./charts

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-go@v5
      with:
        go-version: v1.22

    - name: Delete non-semver tags
      run: 'git tag -d $(git tag -l | grep -v "^v")'

    - name: Set LDFLAGS
      run: echo LDFLAGS="$(make ldflags)" >> $GITHUB_ENV

    - name: Run GoReleaser on tag
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: latest
        args: release --timeout 60m --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        USER: ${{ github.actor }}
        EMAIL: ${{ github.actor}}@users.noreply.github.com

    - name: Set up Helm
      uses: azure/setup-helm@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Package and push clustermetrics chart
      run: |
        chartVersion=$(echo ${{ github.ref_name }} | cut -c 2-)
        cd clustermetrics && make chart IMG=${{ env.REGISTRY }}/${{ env.REPO }}/cluster-metrics:${{github.ref_name}} && cd -
        helm package ${{ env.CHARTS_PATH }}/cluster-metrics --destination . --version ${chartVersion} --app-version ${chartVersion}
        helm push ./cluster-metrics-chart-${chartVersion}.tgz oci://${{ env.REGISTRY }}/${{ env.REPO }}

    - name: Package and push mc-scheduling chart
      run: |
        chartVersion=$(echo ${{ github.ref_name }} | cut -c 2-)
        cd mc-scheduling && make chart IMG=${{ env.REGISTRY }}/${{ env.REPO }}/mc-scheduler:${{github.ref_name}} && cd -
        helm package ${{ env.CHARTS_PATH }}/mc-scheduling --destination . --version ${chartVersion} --app-version ${chartVersion}
        helm push ./mc-scheduling-chart-${chartVersion}.tgz oci://${{ env.REGISTRY }}/${{ env.REPO }}

    - name: Package and push shadow-pods chart
      run: |
        chartVersion=$(echo ${{ github.ref_name }} | cut -c 2-)
        sed -i.bk -e "s|image_placeholder|${{ env.REGISTRY }}/${{ env.REPO }}/shadow-pods|g" \
        -e "s|tag_placeholder|${{github.ref_name}}|g" \
        -e "s|loki_logger_image_placeholder|${{ env.REGISTRY }}/${{ env.REPO }}/loki-logger|g" \
        ${{ env.CHARTS_PATH }}/shadow-pods/values.yaml
        helm package ${{ env.CHARTS_PATH }}/shadow-pods --destination . --version ${chartVersion} --app-version ${chartVersion}
        helm push ./shadow-pods-chart-${chartVersion}.tgz oci://${{ env.REGISTRY }}/${{ env.REPO }}


    - name: Package and push suspend-webhook chart
      run: |
        chartVersion=$(echo ${{ github.ref_name }} | cut -c 2-)
        sed -i.bk -e "s|image_placeholder|${{ env.REGISTRY }}/${{ env.REPO }}/suspend-webhook|g" \
        -e "s|tag_placeholder|${chartVersion}|g" \
        ${{ env.CHARTS_PATH }}/suspend-webhook/values.yaml
        helm package ${{ env.CHARTS_PATH }}/suspend-webhook --destination . --version ${chartVersion} --app-version ${chartVersion}
        helm push ./suspend-webhook-chart-${chartVersion}.tgz oci://${{ env.REGISTRY }}/${{ env.REPO }}


    - name: Package and push kueue-ks chart
      run: |
        chartVersion=$(echo ${{ github.ref_name }} | cut -c 2-)
        sed -i.bk -e "s|image_placeholder|${{ env.REGISTRY }}/${{ env.REPO }}/kueue-ks|g" \
        -e "s|tag_placeholder|${{github.ref_name}}|g" \
        -e "s|cm_placeholder|${{ env.REGISTRY }}/${{ env.REPO }}/cluster-metrics|g" \
        ${{ env.CHARTS_PATH }}/kueue-ks/values.yaml
        helm package ${{ env.CHARTS_PATH }}/kueue-ks --destination . --version ${chartVersion} --app-version ${chartVersion}
        helm push ./kueue-ks-chart-${chartVersion}.tgz oci://${{ env.REGISTRY }}/${{ env.REPO }}
     